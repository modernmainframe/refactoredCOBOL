      ******************************************************************
      * Created: Fri, 5 Jan 2024 07:08:04 GMT
      * Generated by: IBM watsonx Code Assistant for Z Refactoring
      * Assistant
      * Workbook name: LGACDB01
      * Workbook id: dc6f144c-27af-4f53-bee8-f3cb91020f05
      * Project: $clientCOBOL_79e50b6b-5fc0-46ea-9465-ecf96337db9d
      ******************************************************************

       IDENTIFICATION DIVISION.
       PROGRAM-ID. LGACDB01.

       DATA DIVISION.
       WORKING-STORAGE SECTION.
      ******************************************************************
      * COPY SQLCA.
      * PATH : .../Cobol Include/SQLCA
      * THE FOLLOWING VARIABLES ARE USED FROM THE COPYBOOK :
      * 01 SQLCA.
      *     05 SQLCODE     PIC S9(9) COMP-5.
      ******************************************************************
      * PATH : .../zOS Cobol/LGACDB01.cbl
       01  WS-ABSTIME                  PIC S9(8) COMP VALUE +0.
       01  WS-TIME                     PIC X(8)  VALUE SPACES.
       01  WS-DATE                     PIC X(10) VALUE SPACES.
      * DFHCOMMAREA_1 RENAMED FROM DFHCOMMAREA
       01  DFHCOMMAREA_1.
      ******************************************************************
           COPY LGCMAREA.
      * PATH : .../Cobol Include/LGCMAREA.cpy
      * THE FOLLOWING VARIABLES ARE USED FROM THE COPYBOOK :
      *    03 CA-REQUEST-ID            PIC X(6).
      *    03 CA-CUSTSECR-REQUEST REDEFINES CA-REQUEST-SPECIFIC.
      *       05 CA-CUSTSECR-PASS      PIC X(32).
      *       05 CA-CUSTSECR-COUNT     PIC X(4).
      *       05 CA-CUSTSECR-STATE     PIC X.
      *       05 CA-CUSTSECR-DATA      PIC X(32445).
      *    03 CA-RETURN-CODE           PIC 9(2).
      *    03 CA-CUSTOMER-NUM          PIC 9(10).
      *    03 CA-REQUEST-SPECIFIC      PIC X(32482).
      *    03 CA-CUSTOMER-REQUEST REDEFINES CA-REQUEST-SPECIFIC.
      *       05 CA-NUM-POLICIES       PIC 9(3).
      *       05 CA-PHONE-MOBILE       PIC X(20).
      *       05 CA-PHONE-HOME         PIC X(20).
      *       05 CA-EMAIL-ADDRESS      PIC X(100).
      *       05 CA-POLICY-DATA        PIC X(32267).
      *       05 CA-FIRST-NAME         PIC X(10).
      *       05 CA-LAST-NAME          PIC X(20).
      *       05 CA-DOB                PIC X(10).
      *       05 CA-HOUSE-NAME         PIC X(20).
      *       05 CA-HOUSE-NUM          PIC X(4).
      *       05 CA-POSTCODE           PIC X(8).
      *    03 CA-POLICY-REQUEST REDEFINES CA-REQUEST-SPECIFIC.
      *       05 CA-COMMERCIAL REDEFINES CA-POLICY-SPECIFIC.
      *          07 CA-B-RejectReason    PIC X(255).
      *          07 CA-B-FILLER          PIC X(31298).
      *          07 CA-B-Address         PIC X(255).
      *          07 CA-B-Postcode        PIC X(8).
      *          07 CA-B-Latitude        PIC X(11).
      *          07 CA-B-Longitude       PIC X(11).
      *          07 CA-B-Customer        PIC X(255).
      *          07 CA-B-PropType        PIC X(255).
      *          07 CA-B-FirePeril       PIC 9(4).
      *          07 CA-B-FirePremium     PIC 9(8).
      *          07 CA-B-CrimePeril      PIC 9(4).
      *          07 CA-B-CrimePremium    PIC 9(8).
      *          07 CA-B-FloodPeril      PIC 9(4).
      *          07 CA-B-FloodPremium    PIC 9(8).
      *          07 CA-B-WeatherPeril    PIC 9(4).
      *          07 CA-B-WeatherPremium  PIC 9(8).
      *          07 CA-B-Status          PIC 9(4).
      *       05 CA-CLAIM      REDEFINES CA-POLICY-SPECIFIC.
      *          07 CA-C-Num             PIC 9(10).
      *          07 CA-C-Date            PIC X(10).
      *          07 CA-C-Paid            PIC 9(8).
      *          07 CA-C-Value           PIC 9(8).
      *          07 CA-C-Cause           PIC X(255).
      *          07 CA-C-Observations    PIC X(255).
      *          07 CA-C-FILLER          PIC X(31854).
      *       05 CA-POLICY-SPECIFIC    PIC X(32400).
      *       05 CA-ENDOWMENT REDEFINES CA-POLICY-SPECIFIC.
      *          07 CA-E-WITH-PROFITS    PIC X.
      *          07 CA-E-EQUITIES        PIC X.
      *          07 CA-E-MANAGED-FUND    PIC X.
      *          07 CA-E-FUND-NAME       PIC X(10).
      *          07 CA-E-TERM            PIC 99.
      *          07 CA-E-SUM-ASSURED     PIC 9(6).
      *          07 CA-E-LIFE-ASSURED    PIC X(31).
      *          07 CA-E-PADDING-DATA    PIC X(32348).
      *       05 CA-MOTOR REDEFINES CA-POLICY-SPECIFIC.
      *          07 CA-M-MAKE            PIC X(15).
      *          07 CA-M-MODEL           PIC X(15).
      *          07 CA-M-VALUE           PIC 9(6).
      *          07 CA-M-REGNUMBER       PIC X(7).
      *          07 CA-M-COLOUR          PIC X(8).
      *          07 CA-M-CC              PIC 9(4).
      *          07 CA-M-MANUFACTURED    PIC X(10).
      *          07 CA-M-PREMIUM         PIC 9(6).
      *          07 CA-M-ACCIDENTS       PIC 9(6).
      *          07 CA-M-FILLER          PIC X(32323).
      *       05 CA-POLICY-NUM         PIC 9(10).
      *       05 CA-POLICY-COMMON.
      *          07 CA-BROKERID        PIC 9(10).
      *          07 CA-BROKERSREF      PIC X(10).
      *          07 CA-PAYMENT         PIC 9(6).
      *          07 CA-ISSUE-DATE      PIC X(10).
      *          07 CA-EXPIRY-DATE     PIC X(10).
      *          07 CA-LASTCHANGED     PIC X(26).
      *       05 CA-HOUSE REDEFINES CA-POLICY-SPECIFIC.
      *          07 CA-H-VALUE           PIC 9(8).
      *          07 CA-H-HOUSE-NAME      PIC X(20).
      *          07 CA-H-HOUSE-NUMBER    PIC X(4).
      *          07 CA-H-POSTCODE        PIC X(8).
      *          07 CA-H-FILLER          PIC X(32342).
      *          07 CA-H-PROPERTY-TYPE   PIC X(15).
      *          07 CA-H-BEDROOMS        PIC 9(3).
      ******************************************************************
      * PATH : .../zOS Cobol/LGACDB01.cbl
       01  ERROR-MSG.
           03 EM-DATE                  PIC X(8)  VALUE SPACES.
           03 FILLER                   PIC X     VALUE SPACES.
           03 EM-TIME                  PIC X(6)  VALUE SPACES.
           03 FILLER                   PIC X(9)  VALUE ' LGACDB01'.
           03 EM-VARIABLE.
             05 FILLER                 PIC X(9)  VALUE ' SQLCODE='.
             05 EM-SQLRC               PIC +9(5) USAGE DISPLAY.
             05 FILLER                 PIC X(6)  VALUE ' CNUM='.
             05 EM-CUSNUM              PIC X(10)  VALUE SPACES.
             05 FILLER                 PIC X(6)  VALUE ' PNUM='.
             05 EM-POLNUM              PIC X(10)  VALUE SPACES.
             05 EM-SQLREQ              PIC X(16) VALUE SPACES.
       01  CA-ERROR-MSG.
           03 FILLER                   PIC X(9)  VALUE 'COMMAREA='.
           03 CA-DATA                  PIC X(90) VALUE SPACES.
       01  DB2-OUT-INTEGERS.
           03 DB2-CUSTOMERNUM-INT   PIC S9(9) COMP.
       77 LGAC-NCS                     PIC X(2)  VALUE 'ON'.
      ******************************************************************

      * SQLCA DB2 communications area
           EXEC SQL
             INCLUDE SQLCA
           END-EXEC.

           EXEC SQL
              INCLUDE SQLCA
           END-EXEC.

       LINKAGE SECTION.

       PROCEDURE DIVISION.
      ******************************************************************
      * PROGRAM NAME : Program:COBOL:LGACDB01
      * PROGRAM PATH : .../zOS Cobol/LGACDB01.cbl
      * STMT START LINE NUMBER : 232
      * STMT END LINE NUMBER : 304
       INSERT-CUSTOMER.
      *================================================================*
      * Insert row into Customer table based on customer number        *
      *================================================================*
           MOVE ' INSERT CUSTOMER' TO EM-SQLREQ
      *================================================================*
           IF LGAC-NCS = 'ON'
             EXEC SQL
               INSERT INTO CUSTOMER
                         ( CUSTOMERNUMBER,
                           FIRSTNAME,
                           LASTNAME,
                           DATEOFBIRTH,
                           HOUSENAME,
                           HOUSENUMBER,
                           POSTCODE,
                           PHONEMOBILE,
                           PHONEHOME,
                           EMAILADDRESS )
                  VALUES ( :DB2-CUSTOMERNUM-INT,
                           :CA-FIRST-NAME,
                           :CA-LAST-NAME,
                           :CA-DOB,
                           :CA-HOUSE-NAME,
                           :CA-HOUSE-NUM,
                           :CA-POSTCODE,
                           :CA-PHONE-MOBILE,
                           :CA-PHONE-HOME,
                           :CA-EMAIL-ADDRESS )
             END-EXEC
             IF SQLCODE NOT EQUAL 0
               MOVE '90' TO CA-RETURN-CODE
               PERFORM WRITE-ERROR-MESSAGE
      * TODO : CHECK THE FOLLOWING <CONTINUE/NEXT SENTENCE/GO TO/GO
      * BACK/RETURN/STOP RUN/EXIT/EXIT PROGRAM> STATEMENT
               EXEC CICS RETURN END-EXEC
             END-IF
           ELSE
             EXEC SQL
               INSERT INTO CUSTOMER
                         ( CUSTOMERNUMBER,
                           FIRSTNAME,
                           LASTNAME,
                           DATEOFBIRTH,
                           HOUSENAME,
                           HOUSENUMBER,
                           POSTCODE,
                           PHONEMOBILE,
                           PHONEHOME,
                           EMAILADDRESS )
                  VALUES ( DEFAULT,
                           :CA-FIRST-NAME,
                           :CA-LAST-NAME,
                           :CA-DOB,
                           :CA-HOUSE-NAME,
                           :CA-HOUSE-NUM,
                           :CA-POSTCODE,
                           :CA-PHONE-MOBILE,
                           :CA-PHONE-HOME,
                           :CA-EMAIL-ADDRESS )
             END-EXEC
             IF SQLCODE NOT EQUAL 0
               MOVE '90' TO CA-RETURN-CODE
               PERFORM WRITE-ERROR-MESSAGE
      * TODO : CHECK THE FOLLOWING <CONTINUE/NEXT SENTENCE/GO TO/GO
      * BACK/RETURN/STOP RUN/EXIT/EXIT PROGRAM> STATEMENT
               EXEC CICS RETURN END-EXEC
             END-IF
      *    get value of assigned customer number
               EXEC SQL
                 SET :DB2-CUSTOMERNUM-INT = IDENTITY_VAL_LOCAL()
               END-EXEC
           END-IF.

           MOVE DB2-CUSTOMERNUM-INT TO CA-CUSTOMER-NUM.

      * TODO : CHECK THE FOLLOWING <CONTINUE/NEXT SENTENCE/GO TO/GO
      * BACK/RETURN/STOP RUN/EXIT/EXIT PROGRAM> STATEMENT
           EXIT.
      ******************************************************************
      * PROGRAM NAME : Program:COBOL:LGACDB01
      * PROGRAM PATH : .../zOS Cobol/LGACDB01.cbl
      * STMT START LINE NUMBER : 312
      * STMT END LINE NUMBER : 345
      * TODO : CHECK IF THE PROGRAM CALL IS VALID
       WRITE-ERROR-MESSAGE.
      * Save SQLCODE in message
           MOVE SQLCODE TO EM-SQLRC
      * Obtain and format current time and date
           EXEC CICS ASKTIME ABSTIME(WS-ABSTIME)
           END-EXEC
           EXEC CICS FORMATTIME ABSTIME(WS-ABSTIME)
                     MMDDYYYY(WS-DATE)
                     TIME(WS-TIME)
           END-EXEC
           MOVE WS-DATE TO EM-DATE
           MOVE WS-TIME TO EM-TIME
      * Write output message to TDQ
           EXEC CICS LINK PROGRAM('LGSTSQ')
                     COMMAREA(ERROR-MSG)
                     LENGTH(LENGTH OF ERROR-MSG)
           END-EXEC.
      * Write 90 bytes or as much as we have of commarea to TDQ
           IF EIBCALEN > 0 THEN
             IF EIBCALEN < 91 THEN
               MOVE DFHCOMMAREA_1(1:EIBCALEN) TO CA-DATA
               EXEC CICS LINK PROGRAM('LGSTSQ')
                         COMMAREA(CA-ERROR-MSG)
                         LENGTH(LENGTH OF CA-ERROR-MSG)
               END-EXEC
             ELSE
               MOVE DFHCOMMAREA_1(1:90) TO CA-DATA
               EXEC CICS LINK PROGRAM('LGSTSQ')
                         COMMAREA(CA-ERROR-MSG)
                         LENGTH(LENGTH OF CA-ERROR-MSG)
               END-EXEC
             END-IF
           END-IF.
      * TODO : CHECK THE FOLLOWING <CONTINUE/NEXT SENTENCE/GO TO/GO
      * BACK/RETURN/STOP RUN/EXIT/EXIT PROGRAM> STATEMENT
           EXIT.
      ******************************************************************
           EXIT PROGRAM.
